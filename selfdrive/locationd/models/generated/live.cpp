#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.8                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6898201814641298663) {
   out_6898201814641298663[0] = 0;
   out_6898201814641298663[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6898201814641298663[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6898201814641298663[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6898201814641298663[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6898201814641298663[5] = -sin(in_vec[1]);
   out_6898201814641298663[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6898201814641298663[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6898201814641298663[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6898201814641298663[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6898201814641298663[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6898201814641298663[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6898201814641298663[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6898201814641298663[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6898201814641298663[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6898201814641298663[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6898201814641298663[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6898201814641298663[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2731531531239177106) {
   out_2731531531239177106[0] = delta_x[0] + nom_x[0];
   out_2731531531239177106[1] = delta_x[1] + nom_x[1];
   out_2731531531239177106[2] = delta_x[2] + nom_x[2];
   out_2731531531239177106[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2731531531239177106[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2731531531239177106[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2731531531239177106[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2731531531239177106[7] = delta_x[6] + nom_x[7];
   out_2731531531239177106[8] = delta_x[7] + nom_x[8];
   out_2731531531239177106[9] = delta_x[8] + nom_x[9];
   out_2731531531239177106[10] = delta_x[9] + nom_x[10];
   out_2731531531239177106[11] = delta_x[10] + nom_x[11];
   out_2731531531239177106[12] = delta_x[11] + nom_x[12];
   out_2731531531239177106[13] = delta_x[12] + nom_x[13];
   out_2731531531239177106[14] = delta_x[13] + nom_x[14];
   out_2731531531239177106[15] = delta_x[14] + nom_x[15];
   out_2731531531239177106[16] = delta_x[15] + nom_x[16];
   out_2731531531239177106[17] = delta_x[16] + nom_x[17];
   out_2731531531239177106[18] = delta_x[17] + nom_x[18];
   out_2731531531239177106[19] = delta_x[18] + nom_x[19];
   out_2731531531239177106[20] = delta_x[19] + nom_x[20];
   out_2731531531239177106[21] = delta_x[20] + nom_x[21];
   out_2731531531239177106[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_258697847652257420) {
   out_258697847652257420[0] = -nom_x[0] + true_x[0];
   out_258697847652257420[1] = -nom_x[1] + true_x[1];
   out_258697847652257420[2] = -nom_x[2] + true_x[2];
   out_258697847652257420[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_258697847652257420[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_258697847652257420[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_258697847652257420[6] = -nom_x[7] + true_x[7];
   out_258697847652257420[7] = -nom_x[8] + true_x[8];
   out_258697847652257420[8] = -nom_x[9] + true_x[9];
   out_258697847652257420[9] = -nom_x[10] + true_x[10];
   out_258697847652257420[10] = -nom_x[11] + true_x[11];
   out_258697847652257420[11] = -nom_x[12] + true_x[12];
   out_258697847652257420[12] = -nom_x[13] + true_x[13];
   out_258697847652257420[13] = -nom_x[14] + true_x[14];
   out_258697847652257420[14] = -nom_x[15] + true_x[15];
   out_258697847652257420[15] = -nom_x[16] + true_x[16];
   out_258697847652257420[16] = -nom_x[17] + true_x[17];
   out_258697847652257420[17] = -nom_x[18] + true_x[18];
   out_258697847652257420[18] = -nom_x[19] + true_x[19];
   out_258697847652257420[19] = -nom_x[20] + true_x[20];
   out_258697847652257420[20] = -nom_x[21] + true_x[21];
   out_258697847652257420[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_9090898548951532695) {
   out_9090898548951532695[0] = 1.0;
   out_9090898548951532695[1] = 0.0;
   out_9090898548951532695[2] = 0.0;
   out_9090898548951532695[3] = 0.0;
   out_9090898548951532695[4] = 0.0;
   out_9090898548951532695[5] = 0.0;
   out_9090898548951532695[6] = 0.0;
   out_9090898548951532695[7] = 0.0;
   out_9090898548951532695[8] = 0.0;
   out_9090898548951532695[9] = 0.0;
   out_9090898548951532695[10] = 0.0;
   out_9090898548951532695[11] = 0.0;
   out_9090898548951532695[12] = 0.0;
   out_9090898548951532695[13] = 0.0;
   out_9090898548951532695[14] = 0.0;
   out_9090898548951532695[15] = 0.0;
   out_9090898548951532695[16] = 0.0;
   out_9090898548951532695[17] = 0.0;
   out_9090898548951532695[18] = 0.0;
   out_9090898548951532695[19] = 0.0;
   out_9090898548951532695[20] = 0.0;
   out_9090898548951532695[21] = 0.0;
   out_9090898548951532695[22] = 0.0;
   out_9090898548951532695[23] = 1.0;
   out_9090898548951532695[24] = 0.0;
   out_9090898548951532695[25] = 0.0;
   out_9090898548951532695[26] = 0.0;
   out_9090898548951532695[27] = 0.0;
   out_9090898548951532695[28] = 0.0;
   out_9090898548951532695[29] = 0.0;
   out_9090898548951532695[30] = 0.0;
   out_9090898548951532695[31] = 0.0;
   out_9090898548951532695[32] = 0.0;
   out_9090898548951532695[33] = 0.0;
   out_9090898548951532695[34] = 0.0;
   out_9090898548951532695[35] = 0.0;
   out_9090898548951532695[36] = 0.0;
   out_9090898548951532695[37] = 0.0;
   out_9090898548951532695[38] = 0.0;
   out_9090898548951532695[39] = 0.0;
   out_9090898548951532695[40] = 0.0;
   out_9090898548951532695[41] = 0.0;
   out_9090898548951532695[42] = 0.0;
   out_9090898548951532695[43] = 0.0;
   out_9090898548951532695[44] = 0.0;
   out_9090898548951532695[45] = 0.0;
   out_9090898548951532695[46] = 1.0;
   out_9090898548951532695[47] = 0.0;
   out_9090898548951532695[48] = 0.0;
   out_9090898548951532695[49] = 0.0;
   out_9090898548951532695[50] = 0.0;
   out_9090898548951532695[51] = 0.0;
   out_9090898548951532695[52] = 0.0;
   out_9090898548951532695[53] = 0.0;
   out_9090898548951532695[54] = 0.0;
   out_9090898548951532695[55] = 0.0;
   out_9090898548951532695[56] = 0.0;
   out_9090898548951532695[57] = 0.0;
   out_9090898548951532695[58] = 0.0;
   out_9090898548951532695[59] = 0.0;
   out_9090898548951532695[60] = 0.0;
   out_9090898548951532695[61] = 0.0;
   out_9090898548951532695[62] = 0.0;
   out_9090898548951532695[63] = 0.0;
   out_9090898548951532695[64] = 0.0;
   out_9090898548951532695[65] = 0.0;
   out_9090898548951532695[66] = 0.0;
   out_9090898548951532695[67] = 0.0;
   out_9090898548951532695[68] = 0.0;
   out_9090898548951532695[69] = -0.5*state[4];
   out_9090898548951532695[70] = -0.5*state[5];
   out_9090898548951532695[71] = -0.5*state[6];
   out_9090898548951532695[72] = 0.0;
   out_9090898548951532695[73] = 0.0;
   out_9090898548951532695[74] = 0.0;
   out_9090898548951532695[75] = 0.0;
   out_9090898548951532695[76] = 0.0;
   out_9090898548951532695[77] = 0.0;
   out_9090898548951532695[78] = 0.0;
   out_9090898548951532695[79] = 0.0;
   out_9090898548951532695[80] = 0.0;
   out_9090898548951532695[81] = 0.0;
   out_9090898548951532695[82] = 0.0;
   out_9090898548951532695[83] = 0.0;
   out_9090898548951532695[84] = 0.0;
   out_9090898548951532695[85] = 0.0;
   out_9090898548951532695[86] = 0.0;
   out_9090898548951532695[87] = 0.0;
   out_9090898548951532695[88] = 0.0;
   out_9090898548951532695[89] = 0.0;
   out_9090898548951532695[90] = 0.0;
   out_9090898548951532695[91] = 0.5*state[3];
   out_9090898548951532695[92] = 0.5*state[6];
   out_9090898548951532695[93] = -0.5*state[5];
   out_9090898548951532695[94] = 0.0;
   out_9090898548951532695[95] = 0.0;
   out_9090898548951532695[96] = 0.0;
   out_9090898548951532695[97] = 0.0;
   out_9090898548951532695[98] = 0.0;
   out_9090898548951532695[99] = 0.0;
   out_9090898548951532695[100] = 0.0;
   out_9090898548951532695[101] = 0.0;
   out_9090898548951532695[102] = 0.0;
   out_9090898548951532695[103] = 0.0;
   out_9090898548951532695[104] = 0.0;
   out_9090898548951532695[105] = 0.0;
   out_9090898548951532695[106] = 0.0;
   out_9090898548951532695[107] = 0.0;
   out_9090898548951532695[108] = 0.0;
   out_9090898548951532695[109] = 0.0;
   out_9090898548951532695[110] = 0.0;
   out_9090898548951532695[111] = 0.0;
   out_9090898548951532695[112] = 0.0;
   out_9090898548951532695[113] = -0.5*state[6];
   out_9090898548951532695[114] = 0.5*state[3];
   out_9090898548951532695[115] = 0.5*state[4];
   out_9090898548951532695[116] = 0.0;
   out_9090898548951532695[117] = 0.0;
   out_9090898548951532695[118] = 0.0;
   out_9090898548951532695[119] = 0.0;
   out_9090898548951532695[120] = 0.0;
   out_9090898548951532695[121] = 0.0;
   out_9090898548951532695[122] = 0.0;
   out_9090898548951532695[123] = 0.0;
   out_9090898548951532695[124] = 0.0;
   out_9090898548951532695[125] = 0.0;
   out_9090898548951532695[126] = 0.0;
   out_9090898548951532695[127] = 0.0;
   out_9090898548951532695[128] = 0.0;
   out_9090898548951532695[129] = 0.0;
   out_9090898548951532695[130] = 0.0;
   out_9090898548951532695[131] = 0.0;
   out_9090898548951532695[132] = 0.0;
   out_9090898548951532695[133] = 0.0;
   out_9090898548951532695[134] = 0.0;
   out_9090898548951532695[135] = 0.5*state[5];
   out_9090898548951532695[136] = -0.5*state[4];
   out_9090898548951532695[137] = 0.5*state[3];
   out_9090898548951532695[138] = 0.0;
   out_9090898548951532695[139] = 0.0;
   out_9090898548951532695[140] = 0.0;
   out_9090898548951532695[141] = 0.0;
   out_9090898548951532695[142] = 0.0;
   out_9090898548951532695[143] = 0.0;
   out_9090898548951532695[144] = 0.0;
   out_9090898548951532695[145] = 0.0;
   out_9090898548951532695[146] = 0.0;
   out_9090898548951532695[147] = 0.0;
   out_9090898548951532695[148] = 0.0;
   out_9090898548951532695[149] = 0.0;
   out_9090898548951532695[150] = 0.0;
   out_9090898548951532695[151] = 0.0;
   out_9090898548951532695[152] = 0.0;
   out_9090898548951532695[153] = 0.0;
   out_9090898548951532695[154] = 0.0;
   out_9090898548951532695[155] = 0.0;
   out_9090898548951532695[156] = 0.0;
   out_9090898548951532695[157] = 0.0;
   out_9090898548951532695[158] = 0.0;
   out_9090898548951532695[159] = 0.0;
   out_9090898548951532695[160] = 1.0;
   out_9090898548951532695[161] = 0.0;
   out_9090898548951532695[162] = 0.0;
   out_9090898548951532695[163] = 0.0;
   out_9090898548951532695[164] = 0.0;
   out_9090898548951532695[165] = 0.0;
   out_9090898548951532695[166] = 0.0;
   out_9090898548951532695[167] = 0.0;
   out_9090898548951532695[168] = 0.0;
   out_9090898548951532695[169] = 0.0;
   out_9090898548951532695[170] = 0.0;
   out_9090898548951532695[171] = 0.0;
   out_9090898548951532695[172] = 0.0;
   out_9090898548951532695[173] = 0.0;
   out_9090898548951532695[174] = 0.0;
   out_9090898548951532695[175] = 0.0;
   out_9090898548951532695[176] = 0.0;
   out_9090898548951532695[177] = 0.0;
   out_9090898548951532695[178] = 0.0;
   out_9090898548951532695[179] = 0.0;
   out_9090898548951532695[180] = 0.0;
   out_9090898548951532695[181] = 0.0;
   out_9090898548951532695[182] = 0.0;
   out_9090898548951532695[183] = 1.0;
   out_9090898548951532695[184] = 0.0;
   out_9090898548951532695[185] = 0.0;
   out_9090898548951532695[186] = 0.0;
   out_9090898548951532695[187] = 0.0;
   out_9090898548951532695[188] = 0.0;
   out_9090898548951532695[189] = 0.0;
   out_9090898548951532695[190] = 0.0;
   out_9090898548951532695[191] = 0.0;
   out_9090898548951532695[192] = 0.0;
   out_9090898548951532695[193] = 0.0;
   out_9090898548951532695[194] = 0.0;
   out_9090898548951532695[195] = 0.0;
   out_9090898548951532695[196] = 0.0;
   out_9090898548951532695[197] = 0.0;
   out_9090898548951532695[198] = 0.0;
   out_9090898548951532695[199] = 0.0;
   out_9090898548951532695[200] = 0.0;
   out_9090898548951532695[201] = 0.0;
   out_9090898548951532695[202] = 0.0;
   out_9090898548951532695[203] = 0.0;
   out_9090898548951532695[204] = 0.0;
   out_9090898548951532695[205] = 0.0;
   out_9090898548951532695[206] = 1.0;
   out_9090898548951532695[207] = 0.0;
   out_9090898548951532695[208] = 0.0;
   out_9090898548951532695[209] = 0.0;
   out_9090898548951532695[210] = 0.0;
   out_9090898548951532695[211] = 0.0;
   out_9090898548951532695[212] = 0.0;
   out_9090898548951532695[213] = 0.0;
   out_9090898548951532695[214] = 0.0;
   out_9090898548951532695[215] = 0.0;
   out_9090898548951532695[216] = 0.0;
   out_9090898548951532695[217] = 0.0;
   out_9090898548951532695[218] = 0.0;
   out_9090898548951532695[219] = 0.0;
   out_9090898548951532695[220] = 0.0;
   out_9090898548951532695[221] = 0.0;
   out_9090898548951532695[222] = 0.0;
   out_9090898548951532695[223] = 0.0;
   out_9090898548951532695[224] = 0.0;
   out_9090898548951532695[225] = 0.0;
   out_9090898548951532695[226] = 0.0;
   out_9090898548951532695[227] = 0.0;
   out_9090898548951532695[228] = 0.0;
   out_9090898548951532695[229] = 1.0;
   out_9090898548951532695[230] = 0.0;
   out_9090898548951532695[231] = 0.0;
   out_9090898548951532695[232] = 0.0;
   out_9090898548951532695[233] = 0.0;
   out_9090898548951532695[234] = 0.0;
   out_9090898548951532695[235] = 0.0;
   out_9090898548951532695[236] = 0.0;
   out_9090898548951532695[237] = 0.0;
   out_9090898548951532695[238] = 0.0;
   out_9090898548951532695[239] = 0.0;
   out_9090898548951532695[240] = 0.0;
   out_9090898548951532695[241] = 0.0;
   out_9090898548951532695[242] = 0.0;
   out_9090898548951532695[243] = 0.0;
   out_9090898548951532695[244] = 0.0;
   out_9090898548951532695[245] = 0.0;
   out_9090898548951532695[246] = 0.0;
   out_9090898548951532695[247] = 0.0;
   out_9090898548951532695[248] = 0.0;
   out_9090898548951532695[249] = 0.0;
   out_9090898548951532695[250] = 0.0;
   out_9090898548951532695[251] = 0.0;
   out_9090898548951532695[252] = 1.0;
   out_9090898548951532695[253] = 0.0;
   out_9090898548951532695[254] = 0.0;
   out_9090898548951532695[255] = 0.0;
   out_9090898548951532695[256] = 0.0;
   out_9090898548951532695[257] = 0.0;
   out_9090898548951532695[258] = 0.0;
   out_9090898548951532695[259] = 0.0;
   out_9090898548951532695[260] = 0.0;
   out_9090898548951532695[261] = 0.0;
   out_9090898548951532695[262] = 0.0;
   out_9090898548951532695[263] = 0.0;
   out_9090898548951532695[264] = 0.0;
   out_9090898548951532695[265] = 0.0;
   out_9090898548951532695[266] = 0.0;
   out_9090898548951532695[267] = 0.0;
   out_9090898548951532695[268] = 0.0;
   out_9090898548951532695[269] = 0.0;
   out_9090898548951532695[270] = 0.0;
   out_9090898548951532695[271] = 0.0;
   out_9090898548951532695[272] = 0.0;
   out_9090898548951532695[273] = 0.0;
   out_9090898548951532695[274] = 0.0;
   out_9090898548951532695[275] = 1.0;
   out_9090898548951532695[276] = 0.0;
   out_9090898548951532695[277] = 0.0;
   out_9090898548951532695[278] = 0.0;
   out_9090898548951532695[279] = 0.0;
   out_9090898548951532695[280] = 0.0;
   out_9090898548951532695[281] = 0.0;
   out_9090898548951532695[282] = 0.0;
   out_9090898548951532695[283] = 0.0;
   out_9090898548951532695[284] = 0.0;
   out_9090898548951532695[285] = 0.0;
   out_9090898548951532695[286] = 0.0;
   out_9090898548951532695[287] = 0.0;
   out_9090898548951532695[288] = 0.0;
   out_9090898548951532695[289] = 0.0;
   out_9090898548951532695[290] = 0.0;
   out_9090898548951532695[291] = 0.0;
   out_9090898548951532695[292] = 0.0;
   out_9090898548951532695[293] = 0.0;
   out_9090898548951532695[294] = 0.0;
   out_9090898548951532695[295] = 0.0;
   out_9090898548951532695[296] = 0.0;
   out_9090898548951532695[297] = 0.0;
   out_9090898548951532695[298] = 1.0;
   out_9090898548951532695[299] = 0.0;
   out_9090898548951532695[300] = 0.0;
   out_9090898548951532695[301] = 0.0;
   out_9090898548951532695[302] = 0.0;
   out_9090898548951532695[303] = 0.0;
   out_9090898548951532695[304] = 0.0;
   out_9090898548951532695[305] = 0.0;
   out_9090898548951532695[306] = 0.0;
   out_9090898548951532695[307] = 0.0;
   out_9090898548951532695[308] = 0.0;
   out_9090898548951532695[309] = 0.0;
   out_9090898548951532695[310] = 0.0;
   out_9090898548951532695[311] = 0.0;
   out_9090898548951532695[312] = 0.0;
   out_9090898548951532695[313] = 0.0;
   out_9090898548951532695[314] = 0.0;
   out_9090898548951532695[315] = 0.0;
   out_9090898548951532695[316] = 0.0;
   out_9090898548951532695[317] = 0.0;
   out_9090898548951532695[318] = 0.0;
   out_9090898548951532695[319] = 0.0;
   out_9090898548951532695[320] = 0.0;
   out_9090898548951532695[321] = 1.0;
   out_9090898548951532695[322] = 0.0;
   out_9090898548951532695[323] = 0.0;
   out_9090898548951532695[324] = 0.0;
   out_9090898548951532695[325] = 0.0;
   out_9090898548951532695[326] = 0.0;
   out_9090898548951532695[327] = 0.0;
   out_9090898548951532695[328] = 0.0;
   out_9090898548951532695[329] = 0.0;
   out_9090898548951532695[330] = 0.0;
   out_9090898548951532695[331] = 0.0;
   out_9090898548951532695[332] = 0.0;
   out_9090898548951532695[333] = 0.0;
   out_9090898548951532695[334] = 0.0;
   out_9090898548951532695[335] = 0.0;
   out_9090898548951532695[336] = 0.0;
   out_9090898548951532695[337] = 0.0;
   out_9090898548951532695[338] = 0.0;
   out_9090898548951532695[339] = 0.0;
   out_9090898548951532695[340] = 0.0;
   out_9090898548951532695[341] = 0.0;
   out_9090898548951532695[342] = 0.0;
   out_9090898548951532695[343] = 0.0;
   out_9090898548951532695[344] = 1.0;
   out_9090898548951532695[345] = 0.0;
   out_9090898548951532695[346] = 0.0;
   out_9090898548951532695[347] = 0.0;
   out_9090898548951532695[348] = 0.0;
   out_9090898548951532695[349] = 0.0;
   out_9090898548951532695[350] = 0.0;
   out_9090898548951532695[351] = 0.0;
   out_9090898548951532695[352] = 0.0;
   out_9090898548951532695[353] = 0.0;
   out_9090898548951532695[354] = 0.0;
   out_9090898548951532695[355] = 0.0;
   out_9090898548951532695[356] = 0.0;
   out_9090898548951532695[357] = 0.0;
   out_9090898548951532695[358] = 0.0;
   out_9090898548951532695[359] = 0.0;
   out_9090898548951532695[360] = 0.0;
   out_9090898548951532695[361] = 0.0;
   out_9090898548951532695[362] = 0.0;
   out_9090898548951532695[363] = 0.0;
   out_9090898548951532695[364] = 0.0;
   out_9090898548951532695[365] = 0.0;
   out_9090898548951532695[366] = 0.0;
   out_9090898548951532695[367] = 1.0;
   out_9090898548951532695[368] = 0.0;
   out_9090898548951532695[369] = 0.0;
   out_9090898548951532695[370] = 0.0;
   out_9090898548951532695[371] = 0.0;
   out_9090898548951532695[372] = 0.0;
   out_9090898548951532695[373] = 0.0;
   out_9090898548951532695[374] = 0.0;
   out_9090898548951532695[375] = 0.0;
   out_9090898548951532695[376] = 0.0;
   out_9090898548951532695[377] = 0.0;
   out_9090898548951532695[378] = 0.0;
   out_9090898548951532695[379] = 0.0;
   out_9090898548951532695[380] = 0.0;
   out_9090898548951532695[381] = 0.0;
   out_9090898548951532695[382] = 0.0;
   out_9090898548951532695[383] = 0.0;
   out_9090898548951532695[384] = 0.0;
   out_9090898548951532695[385] = 0.0;
   out_9090898548951532695[386] = 0.0;
   out_9090898548951532695[387] = 0.0;
   out_9090898548951532695[388] = 0.0;
   out_9090898548951532695[389] = 0.0;
   out_9090898548951532695[390] = 1.0;
   out_9090898548951532695[391] = 0.0;
   out_9090898548951532695[392] = 0.0;
   out_9090898548951532695[393] = 0.0;
   out_9090898548951532695[394] = 0.0;
   out_9090898548951532695[395] = 0.0;
   out_9090898548951532695[396] = 0.0;
   out_9090898548951532695[397] = 0.0;
   out_9090898548951532695[398] = 0.0;
   out_9090898548951532695[399] = 0.0;
   out_9090898548951532695[400] = 0.0;
   out_9090898548951532695[401] = 0.0;
   out_9090898548951532695[402] = 0.0;
   out_9090898548951532695[403] = 0.0;
   out_9090898548951532695[404] = 0.0;
   out_9090898548951532695[405] = 0.0;
   out_9090898548951532695[406] = 0.0;
   out_9090898548951532695[407] = 0.0;
   out_9090898548951532695[408] = 0.0;
   out_9090898548951532695[409] = 0.0;
   out_9090898548951532695[410] = 0.0;
   out_9090898548951532695[411] = 0.0;
   out_9090898548951532695[412] = 0.0;
   out_9090898548951532695[413] = 1.0;
   out_9090898548951532695[414] = 0.0;
   out_9090898548951532695[415] = 0.0;
   out_9090898548951532695[416] = 0.0;
   out_9090898548951532695[417] = 0.0;
   out_9090898548951532695[418] = 0.0;
   out_9090898548951532695[419] = 0.0;
   out_9090898548951532695[420] = 0.0;
   out_9090898548951532695[421] = 0.0;
   out_9090898548951532695[422] = 0.0;
   out_9090898548951532695[423] = 0.0;
   out_9090898548951532695[424] = 0.0;
   out_9090898548951532695[425] = 0.0;
   out_9090898548951532695[426] = 0.0;
   out_9090898548951532695[427] = 0.0;
   out_9090898548951532695[428] = 0.0;
   out_9090898548951532695[429] = 0.0;
   out_9090898548951532695[430] = 0.0;
   out_9090898548951532695[431] = 0.0;
   out_9090898548951532695[432] = 0.0;
   out_9090898548951532695[433] = 0.0;
   out_9090898548951532695[434] = 0.0;
   out_9090898548951532695[435] = 0.0;
   out_9090898548951532695[436] = 1.0;
   out_9090898548951532695[437] = 0.0;
   out_9090898548951532695[438] = 0.0;
   out_9090898548951532695[439] = 0.0;
   out_9090898548951532695[440] = 0.0;
   out_9090898548951532695[441] = 0.0;
   out_9090898548951532695[442] = 0.0;
   out_9090898548951532695[443] = 0.0;
   out_9090898548951532695[444] = 0.0;
   out_9090898548951532695[445] = 0.0;
   out_9090898548951532695[446] = 0.0;
   out_9090898548951532695[447] = 0.0;
   out_9090898548951532695[448] = 0.0;
   out_9090898548951532695[449] = 0.0;
   out_9090898548951532695[450] = 0.0;
   out_9090898548951532695[451] = 0.0;
   out_9090898548951532695[452] = 0.0;
   out_9090898548951532695[453] = 0.0;
   out_9090898548951532695[454] = 0.0;
   out_9090898548951532695[455] = 0.0;
   out_9090898548951532695[456] = 0.0;
   out_9090898548951532695[457] = 0.0;
   out_9090898548951532695[458] = 0.0;
   out_9090898548951532695[459] = 1.0;
   out_9090898548951532695[460] = 0.0;
   out_9090898548951532695[461] = 0.0;
   out_9090898548951532695[462] = 0.0;
   out_9090898548951532695[463] = 0.0;
   out_9090898548951532695[464] = 0.0;
   out_9090898548951532695[465] = 0.0;
   out_9090898548951532695[466] = 0.0;
   out_9090898548951532695[467] = 0.0;
   out_9090898548951532695[468] = 0.0;
   out_9090898548951532695[469] = 0.0;
   out_9090898548951532695[470] = 0.0;
   out_9090898548951532695[471] = 0.0;
   out_9090898548951532695[472] = 0.0;
   out_9090898548951532695[473] = 0.0;
   out_9090898548951532695[474] = 0.0;
   out_9090898548951532695[475] = 0.0;
   out_9090898548951532695[476] = 0.0;
   out_9090898548951532695[477] = 0.0;
   out_9090898548951532695[478] = 0.0;
   out_9090898548951532695[479] = 0.0;
   out_9090898548951532695[480] = 0.0;
   out_9090898548951532695[481] = 0.0;
   out_9090898548951532695[482] = 1.0;
   out_9090898548951532695[483] = 0.0;
   out_9090898548951532695[484] = 0.0;
   out_9090898548951532695[485] = 0.0;
   out_9090898548951532695[486] = 0.0;
   out_9090898548951532695[487] = 0.0;
   out_9090898548951532695[488] = 0.0;
   out_9090898548951532695[489] = 0.0;
   out_9090898548951532695[490] = 0.0;
   out_9090898548951532695[491] = 0.0;
   out_9090898548951532695[492] = 0.0;
   out_9090898548951532695[493] = 0.0;
   out_9090898548951532695[494] = 0.0;
   out_9090898548951532695[495] = 0.0;
   out_9090898548951532695[496] = 0.0;
   out_9090898548951532695[497] = 0.0;
   out_9090898548951532695[498] = 0.0;
   out_9090898548951532695[499] = 0.0;
   out_9090898548951532695[500] = 0.0;
   out_9090898548951532695[501] = 0.0;
   out_9090898548951532695[502] = 0.0;
   out_9090898548951532695[503] = 0.0;
   out_9090898548951532695[504] = 0.0;
   out_9090898548951532695[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_9171496604355134652) {
   out_9171496604355134652[0] = dt*state[7] + state[0];
   out_9171496604355134652[1] = dt*state[8] + state[1];
   out_9171496604355134652[2] = dt*state[9] + state[2];
   out_9171496604355134652[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9171496604355134652[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9171496604355134652[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9171496604355134652[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9171496604355134652[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_9171496604355134652[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_9171496604355134652[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_9171496604355134652[10] = state[10];
   out_9171496604355134652[11] = state[11];
   out_9171496604355134652[12] = state[12];
   out_9171496604355134652[13] = state[13];
   out_9171496604355134652[14] = state[14];
   out_9171496604355134652[15] = state[15];
   out_9171496604355134652[16] = state[16];
   out_9171496604355134652[17] = state[17];
   out_9171496604355134652[18] = state[18];
   out_9171496604355134652[19] = state[19];
   out_9171496604355134652[20] = state[20];
   out_9171496604355134652[21] = state[21];
   out_9171496604355134652[22] = state[22];
}
void F_fun(double *state, double dt, double *out_4618057697060829338) {
   out_4618057697060829338[0] = 1;
   out_4618057697060829338[1] = 0;
   out_4618057697060829338[2] = 0;
   out_4618057697060829338[3] = 0;
   out_4618057697060829338[4] = 0;
   out_4618057697060829338[5] = 0;
   out_4618057697060829338[6] = dt;
   out_4618057697060829338[7] = 0;
   out_4618057697060829338[8] = 0;
   out_4618057697060829338[9] = 0;
   out_4618057697060829338[10] = 0;
   out_4618057697060829338[11] = 0;
   out_4618057697060829338[12] = 0;
   out_4618057697060829338[13] = 0;
   out_4618057697060829338[14] = 0;
   out_4618057697060829338[15] = 0;
   out_4618057697060829338[16] = 0;
   out_4618057697060829338[17] = 0;
   out_4618057697060829338[18] = 0;
   out_4618057697060829338[19] = 0;
   out_4618057697060829338[20] = 0;
   out_4618057697060829338[21] = 0;
   out_4618057697060829338[22] = 0;
   out_4618057697060829338[23] = 1;
   out_4618057697060829338[24] = 0;
   out_4618057697060829338[25] = 0;
   out_4618057697060829338[26] = 0;
   out_4618057697060829338[27] = 0;
   out_4618057697060829338[28] = 0;
   out_4618057697060829338[29] = dt;
   out_4618057697060829338[30] = 0;
   out_4618057697060829338[31] = 0;
   out_4618057697060829338[32] = 0;
   out_4618057697060829338[33] = 0;
   out_4618057697060829338[34] = 0;
   out_4618057697060829338[35] = 0;
   out_4618057697060829338[36] = 0;
   out_4618057697060829338[37] = 0;
   out_4618057697060829338[38] = 0;
   out_4618057697060829338[39] = 0;
   out_4618057697060829338[40] = 0;
   out_4618057697060829338[41] = 0;
   out_4618057697060829338[42] = 0;
   out_4618057697060829338[43] = 0;
   out_4618057697060829338[44] = 0;
   out_4618057697060829338[45] = 0;
   out_4618057697060829338[46] = 1;
   out_4618057697060829338[47] = 0;
   out_4618057697060829338[48] = 0;
   out_4618057697060829338[49] = 0;
   out_4618057697060829338[50] = 0;
   out_4618057697060829338[51] = 0;
   out_4618057697060829338[52] = dt;
   out_4618057697060829338[53] = 0;
   out_4618057697060829338[54] = 0;
   out_4618057697060829338[55] = 0;
   out_4618057697060829338[56] = 0;
   out_4618057697060829338[57] = 0;
   out_4618057697060829338[58] = 0;
   out_4618057697060829338[59] = 0;
   out_4618057697060829338[60] = 0;
   out_4618057697060829338[61] = 0;
   out_4618057697060829338[62] = 0;
   out_4618057697060829338[63] = 0;
   out_4618057697060829338[64] = 0;
   out_4618057697060829338[65] = 0;
   out_4618057697060829338[66] = 0;
   out_4618057697060829338[67] = 0;
   out_4618057697060829338[68] = 0;
   out_4618057697060829338[69] = 1;
   out_4618057697060829338[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4618057697060829338[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4618057697060829338[72] = 0;
   out_4618057697060829338[73] = 0;
   out_4618057697060829338[74] = 0;
   out_4618057697060829338[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4618057697060829338[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4618057697060829338[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4618057697060829338[78] = 0;
   out_4618057697060829338[79] = 0;
   out_4618057697060829338[80] = 0;
   out_4618057697060829338[81] = 0;
   out_4618057697060829338[82] = 0;
   out_4618057697060829338[83] = 0;
   out_4618057697060829338[84] = 0;
   out_4618057697060829338[85] = 0;
   out_4618057697060829338[86] = 0;
   out_4618057697060829338[87] = 0;
   out_4618057697060829338[88] = 0;
   out_4618057697060829338[89] = 0;
   out_4618057697060829338[90] = 0;
   out_4618057697060829338[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4618057697060829338[92] = 1;
   out_4618057697060829338[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4618057697060829338[94] = 0;
   out_4618057697060829338[95] = 0;
   out_4618057697060829338[96] = 0;
   out_4618057697060829338[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4618057697060829338[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4618057697060829338[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4618057697060829338[100] = 0;
   out_4618057697060829338[101] = 0;
   out_4618057697060829338[102] = 0;
   out_4618057697060829338[103] = 0;
   out_4618057697060829338[104] = 0;
   out_4618057697060829338[105] = 0;
   out_4618057697060829338[106] = 0;
   out_4618057697060829338[107] = 0;
   out_4618057697060829338[108] = 0;
   out_4618057697060829338[109] = 0;
   out_4618057697060829338[110] = 0;
   out_4618057697060829338[111] = 0;
   out_4618057697060829338[112] = 0;
   out_4618057697060829338[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4618057697060829338[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4618057697060829338[115] = 1;
   out_4618057697060829338[116] = 0;
   out_4618057697060829338[117] = 0;
   out_4618057697060829338[118] = 0;
   out_4618057697060829338[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4618057697060829338[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4618057697060829338[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4618057697060829338[122] = 0;
   out_4618057697060829338[123] = 0;
   out_4618057697060829338[124] = 0;
   out_4618057697060829338[125] = 0;
   out_4618057697060829338[126] = 0;
   out_4618057697060829338[127] = 0;
   out_4618057697060829338[128] = 0;
   out_4618057697060829338[129] = 0;
   out_4618057697060829338[130] = 0;
   out_4618057697060829338[131] = 0;
   out_4618057697060829338[132] = 0;
   out_4618057697060829338[133] = 0;
   out_4618057697060829338[134] = 0;
   out_4618057697060829338[135] = 0;
   out_4618057697060829338[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_4618057697060829338[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4618057697060829338[138] = 1;
   out_4618057697060829338[139] = 0;
   out_4618057697060829338[140] = 0;
   out_4618057697060829338[141] = 0;
   out_4618057697060829338[142] = 0;
   out_4618057697060829338[143] = 0;
   out_4618057697060829338[144] = 0;
   out_4618057697060829338[145] = 0;
   out_4618057697060829338[146] = 0;
   out_4618057697060829338[147] = 0;
   out_4618057697060829338[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4618057697060829338[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4618057697060829338[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4618057697060829338[151] = 0;
   out_4618057697060829338[152] = 0;
   out_4618057697060829338[153] = 0;
   out_4618057697060829338[154] = 0;
   out_4618057697060829338[155] = 0;
   out_4618057697060829338[156] = 0;
   out_4618057697060829338[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_4618057697060829338[158] = 0;
   out_4618057697060829338[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4618057697060829338[160] = 0;
   out_4618057697060829338[161] = 1;
   out_4618057697060829338[162] = 0;
   out_4618057697060829338[163] = 0;
   out_4618057697060829338[164] = 0;
   out_4618057697060829338[165] = 0;
   out_4618057697060829338[166] = 0;
   out_4618057697060829338[167] = 0;
   out_4618057697060829338[168] = 0;
   out_4618057697060829338[169] = 0;
   out_4618057697060829338[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4618057697060829338[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4618057697060829338[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4618057697060829338[173] = 0;
   out_4618057697060829338[174] = 0;
   out_4618057697060829338[175] = 0;
   out_4618057697060829338[176] = 0;
   out_4618057697060829338[177] = 0;
   out_4618057697060829338[178] = 0;
   out_4618057697060829338[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_4618057697060829338[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4618057697060829338[181] = 0;
   out_4618057697060829338[182] = 0;
   out_4618057697060829338[183] = 0;
   out_4618057697060829338[184] = 1;
   out_4618057697060829338[185] = 0;
   out_4618057697060829338[186] = 0;
   out_4618057697060829338[187] = 0;
   out_4618057697060829338[188] = 0;
   out_4618057697060829338[189] = 0;
   out_4618057697060829338[190] = 0;
   out_4618057697060829338[191] = 0;
   out_4618057697060829338[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4618057697060829338[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4618057697060829338[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4618057697060829338[195] = 0;
   out_4618057697060829338[196] = 0;
   out_4618057697060829338[197] = 0;
   out_4618057697060829338[198] = 0;
   out_4618057697060829338[199] = 0;
   out_4618057697060829338[200] = 0;
   out_4618057697060829338[201] = 0;
   out_4618057697060829338[202] = 0;
   out_4618057697060829338[203] = 0;
   out_4618057697060829338[204] = 0;
   out_4618057697060829338[205] = 0;
   out_4618057697060829338[206] = 0;
   out_4618057697060829338[207] = 1;
   out_4618057697060829338[208] = 0;
   out_4618057697060829338[209] = 0;
   out_4618057697060829338[210] = 0;
   out_4618057697060829338[211] = 0;
   out_4618057697060829338[212] = 0;
   out_4618057697060829338[213] = 0;
   out_4618057697060829338[214] = 0;
   out_4618057697060829338[215] = 0;
   out_4618057697060829338[216] = 0;
   out_4618057697060829338[217] = 0;
   out_4618057697060829338[218] = 0;
   out_4618057697060829338[219] = 0;
   out_4618057697060829338[220] = 0;
   out_4618057697060829338[221] = 0;
   out_4618057697060829338[222] = 0;
   out_4618057697060829338[223] = 0;
   out_4618057697060829338[224] = 0;
   out_4618057697060829338[225] = 0;
   out_4618057697060829338[226] = 0;
   out_4618057697060829338[227] = 0;
   out_4618057697060829338[228] = 0;
   out_4618057697060829338[229] = 0;
   out_4618057697060829338[230] = 1;
   out_4618057697060829338[231] = 0;
   out_4618057697060829338[232] = 0;
   out_4618057697060829338[233] = 0;
   out_4618057697060829338[234] = 0;
   out_4618057697060829338[235] = 0;
   out_4618057697060829338[236] = 0;
   out_4618057697060829338[237] = 0;
   out_4618057697060829338[238] = 0;
   out_4618057697060829338[239] = 0;
   out_4618057697060829338[240] = 0;
   out_4618057697060829338[241] = 0;
   out_4618057697060829338[242] = 0;
   out_4618057697060829338[243] = 0;
   out_4618057697060829338[244] = 0;
   out_4618057697060829338[245] = 0;
   out_4618057697060829338[246] = 0;
   out_4618057697060829338[247] = 0;
   out_4618057697060829338[248] = 0;
   out_4618057697060829338[249] = 0;
   out_4618057697060829338[250] = 0;
   out_4618057697060829338[251] = 0;
   out_4618057697060829338[252] = 0;
   out_4618057697060829338[253] = 1;
   out_4618057697060829338[254] = 0;
   out_4618057697060829338[255] = 0;
   out_4618057697060829338[256] = 0;
   out_4618057697060829338[257] = 0;
   out_4618057697060829338[258] = 0;
   out_4618057697060829338[259] = 0;
   out_4618057697060829338[260] = 0;
   out_4618057697060829338[261] = 0;
   out_4618057697060829338[262] = 0;
   out_4618057697060829338[263] = 0;
   out_4618057697060829338[264] = 0;
   out_4618057697060829338[265] = 0;
   out_4618057697060829338[266] = 0;
   out_4618057697060829338[267] = 0;
   out_4618057697060829338[268] = 0;
   out_4618057697060829338[269] = 0;
   out_4618057697060829338[270] = 0;
   out_4618057697060829338[271] = 0;
   out_4618057697060829338[272] = 0;
   out_4618057697060829338[273] = 0;
   out_4618057697060829338[274] = 0;
   out_4618057697060829338[275] = 0;
   out_4618057697060829338[276] = 1;
   out_4618057697060829338[277] = 0;
   out_4618057697060829338[278] = 0;
   out_4618057697060829338[279] = 0;
   out_4618057697060829338[280] = 0;
   out_4618057697060829338[281] = 0;
   out_4618057697060829338[282] = 0;
   out_4618057697060829338[283] = 0;
   out_4618057697060829338[284] = 0;
   out_4618057697060829338[285] = 0;
   out_4618057697060829338[286] = 0;
   out_4618057697060829338[287] = 0;
   out_4618057697060829338[288] = 0;
   out_4618057697060829338[289] = 0;
   out_4618057697060829338[290] = 0;
   out_4618057697060829338[291] = 0;
   out_4618057697060829338[292] = 0;
   out_4618057697060829338[293] = 0;
   out_4618057697060829338[294] = 0;
   out_4618057697060829338[295] = 0;
   out_4618057697060829338[296] = 0;
   out_4618057697060829338[297] = 0;
   out_4618057697060829338[298] = 0;
   out_4618057697060829338[299] = 1;
   out_4618057697060829338[300] = 0;
   out_4618057697060829338[301] = 0;
   out_4618057697060829338[302] = 0;
   out_4618057697060829338[303] = 0;
   out_4618057697060829338[304] = 0;
   out_4618057697060829338[305] = 0;
   out_4618057697060829338[306] = 0;
   out_4618057697060829338[307] = 0;
   out_4618057697060829338[308] = 0;
   out_4618057697060829338[309] = 0;
   out_4618057697060829338[310] = 0;
   out_4618057697060829338[311] = 0;
   out_4618057697060829338[312] = 0;
   out_4618057697060829338[313] = 0;
   out_4618057697060829338[314] = 0;
   out_4618057697060829338[315] = 0;
   out_4618057697060829338[316] = 0;
   out_4618057697060829338[317] = 0;
   out_4618057697060829338[318] = 0;
   out_4618057697060829338[319] = 0;
   out_4618057697060829338[320] = 0;
   out_4618057697060829338[321] = 0;
   out_4618057697060829338[322] = 1;
   out_4618057697060829338[323] = 0;
   out_4618057697060829338[324] = 0;
   out_4618057697060829338[325] = 0;
   out_4618057697060829338[326] = 0;
   out_4618057697060829338[327] = 0;
   out_4618057697060829338[328] = 0;
   out_4618057697060829338[329] = 0;
   out_4618057697060829338[330] = 0;
   out_4618057697060829338[331] = 0;
   out_4618057697060829338[332] = 0;
   out_4618057697060829338[333] = 0;
   out_4618057697060829338[334] = 0;
   out_4618057697060829338[335] = 0;
   out_4618057697060829338[336] = 0;
   out_4618057697060829338[337] = 0;
   out_4618057697060829338[338] = 0;
   out_4618057697060829338[339] = 0;
   out_4618057697060829338[340] = 0;
   out_4618057697060829338[341] = 0;
   out_4618057697060829338[342] = 0;
   out_4618057697060829338[343] = 0;
   out_4618057697060829338[344] = 0;
   out_4618057697060829338[345] = 1;
   out_4618057697060829338[346] = 0;
   out_4618057697060829338[347] = 0;
   out_4618057697060829338[348] = 0;
   out_4618057697060829338[349] = 0;
   out_4618057697060829338[350] = 0;
   out_4618057697060829338[351] = 0;
   out_4618057697060829338[352] = 0;
   out_4618057697060829338[353] = 0;
   out_4618057697060829338[354] = 0;
   out_4618057697060829338[355] = 0;
   out_4618057697060829338[356] = 0;
   out_4618057697060829338[357] = 0;
   out_4618057697060829338[358] = 0;
   out_4618057697060829338[359] = 0;
   out_4618057697060829338[360] = 0;
   out_4618057697060829338[361] = 0;
   out_4618057697060829338[362] = 0;
   out_4618057697060829338[363] = 0;
   out_4618057697060829338[364] = 0;
   out_4618057697060829338[365] = 0;
   out_4618057697060829338[366] = 0;
   out_4618057697060829338[367] = 0;
   out_4618057697060829338[368] = 1;
   out_4618057697060829338[369] = 0;
   out_4618057697060829338[370] = 0;
   out_4618057697060829338[371] = 0;
   out_4618057697060829338[372] = 0;
   out_4618057697060829338[373] = 0;
   out_4618057697060829338[374] = 0;
   out_4618057697060829338[375] = 0;
   out_4618057697060829338[376] = 0;
   out_4618057697060829338[377] = 0;
   out_4618057697060829338[378] = 0;
   out_4618057697060829338[379] = 0;
   out_4618057697060829338[380] = 0;
   out_4618057697060829338[381] = 0;
   out_4618057697060829338[382] = 0;
   out_4618057697060829338[383] = 0;
   out_4618057697060829338[384] = 0;
   out_4618057697060829338[385] = 0;
   out_4618057697060829338[386] = 0;
   out_4618057697060829338[387] = 0;
   out_4618057697060829338[388] = 0;
   out_4618057697060829338[389] = 0;
   out_4618057697060829338[390] = 0;
   out_4618057697060829338[391] = 1;
   out_4618057697060829338[392] = 0;
   out_4618057697060829338[393] = 0;
   out_4618057697060829338[394] = 0;
   out_4618057697060829338[395] = 0;
   out_4618057697060829338[396] = 0;
   out_4618057697060829338[397] = 0;
   out_4618057697060829338[398] = 0;
   out_4618057697060829338[399] = 0;
   out_4618057697060829338[400] = 0;
   out_4618057697060829338[401] = 0;
   out_4618057697060829338[402] = 0;
   out_4618057697060829338[403] = 0;
   out_4618057697060829338[404] = 0;
   out_4618057697060829338[405] = 0;
   out_4618057697060829338[406] = 0;
   out_4618057697060829338[407] = 0;
   out_4618057697060829338[408] = 0;
   out_4618057697060829338[409] = 0;
   out_4618057697060829338[410] = 0;
   out_4618057697060829338[411] = 0;
   out_4618057697060829338[412] = 0;
   out_4618057697060829338[413] = 0;
   out_4618057697060829338[414] = 1;
   out_4618057697060829338[415] = 0;
   out_4618057697060829338[416] = 0;
   out_4618057697060829338[417] = 0;
   out_4618057697060829338[418] = 0;
   out_4618057697060829338[419] = 0;
   out_4618057697060829338[420] = 0;
   out_4618057697060829338[421] = 0;
   out_4618057697060829338[422] = 0;
   out_4618057697060829338[423] = 0;
   out_4618057697060829338[424] = 0;
   out_4618057697060829338[425] = 0;
   out_4618057697060829338[426] = 0;
   out_4618057697060829338[427] = 0;
   out_4618057697060829338[428] = 0;
   out_4618057697060829338[429] = 0;
   out_4618057697060829338[430] = 0;
   out_4618057697060829338[431] = 0;
   out_4618057697060829338[432] = 0;
   out_4618057697060829338[433] = 0;
   out_4618057697060829338[434] = 0;
   out_4618057697060829338[435] = 0;
   out_4618057697060829338[436] = 0;
   out_4618057697060829338[437] = 1;
   out_4618057697060829338[438] = 0;
   out_4618057697060829338[439] = 0;
   out_4618057697060829338[440] = 0;
   out_4618057697060829338[441] = 0;
   out_4618057697060829338[442] = 0;
   out_4618057697060829338[443] = 0;
   out_4618057697060829338[444] = 0;
   out_4618057697060829338[445] = 0;
   out_4618057697060829338[446] = 0;
   out_4618057697060829338[447] = 0;
   out_4618057697060829338[448] = 0;
   out_4618057697060829338[449] = 0;
   out_4618057697060829338[450] = 0;
   out_4618057697060829338[451] = 0;
   out_4618057697060829338[452] = 0;
   out_4618057697060829338[453] = 0;
   out_4618057697060829338[454] = 0;
   out_4618057697060829338[455] = 0;
   out_4618057697060829338[456] = 0;
   out_4618057697060829338[457] = 0;
   out_4618057697060829338[458] = 0;
   out_4618057697060829338[459] = 0;
   out_4618057697060829338[460] = 1;
   out_4618057697060829338[461] = 0;
   out_4618057697060829338[462] = 0;
   out_4618057697060829338[463] = 0;
   out_4618057697060829338[464] = 0;
   out_4618057697060829338[465] = 0;
   out_4618057697060829338[466] = 0;
   out_4618057697060829338[467] = 0;
   out_4618057697060829338[468] = 0;
   out_4618057697060829338[469] = 0;
   out_4618057697060829338[470] = 0;
   out_4618057697060829338[471] = 0;
   out_4618057697060829338[472] = 0;
   out_4618057697060829338[473] = 0;
   out_4618057697060829338[474] = 0;
   out_4618057697060829338[475] = 0;
   out_4618057697060829338[476] = 0;
   out_4618057697060829338[477] = 0;
   out_4618057697060829338[478] = 0;
   out_4618057697060829338[479] = 0;
   out_4618057697060829338[480] = 0;
   out_4618057697060829338[481] = 0;
   out_4618057697060829338[482] = 0;
   out_4618057697060829338[483] = 1;
}
void h_3(double *state, double *unused, double *out_4538801653319691933) {
   out_4538801653319691933[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_575863248760330452) {
   out_575863248760330452[0] = 0;
   out_575863248760330452[1] = 0;
   out_575863248760330452[2] = 0;
   out_575863248760330452[3] = 0;
   out_575863248760330452[4] = 0;
   out_575863248760330452[5] = 0;
   out_575863248760330452[6] = 0;
   out_575863248760330452[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_575863248760330452[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_575863248760330452[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_575863248760330452[10] = 0;
   out_575863248760330452[11] = 0;
   out_575863248760330452[12] = 0;
   out_575863248760330452[13] = 0;
   out_575863248760330452[14] = 0;
   out_575863248760330452[15] = 0;
   out_575863248760330452[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_575863248760330452[17] = 0;
   out_575863248760330452[18] = 0;
   out_575863248760330452[19] = 0;
   out_575863248760330452[20] = 0;
   out_575863248760330452[21] = 0;
   out_575863248760330452[22] = 0;
}
void h_4(double *state, double *unused, double *out_245390277277672403) {
   out_245390277277672403[0] = state[10] + state[13];
   out_245390277277672403[1] = state[11] + state[14];
   out_245390277277672403[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5206672849366731593) {
   out_5206672849366731593[0] = 0;
   out_5206672849366731593[1] = 0;
   out_5206672849366731593[2] = 0;
   out_5206672849366731593[3] = 0;
   out_5206672849366731593[4] = 0;
   out_5206672849366731593[5] = 0;
   out_5206672849366731593[6] = 0;
   out_5206672849366731593[7] = 0;
   out_5206672849366731593[8] = 0;
   out_5206672849366731593[9] = 0;
   out_5206672849366731593[10] = 1;
   out_5206672849366731593[11] = 0;
   out_5206672849366731593[12] = 0;
   out_5206672849366731593[13] = 1;
   out_5206672849366731593[14] = 0;
   out_5206672849366731593[15] = 0;
   out_5206672849366731593[16] = 0;
   out_5206672849366731593[17] = 0;
   out_5206672849366731593[18] = 0;
   out_5206672849366731593[19] = 0;
   out_5206672849366731593[20] = 0;
   out_5206672849366731593[21] = 0;
   out_5206672849366731593[22] = 0;
   out_5206672849366731593[23] = 0;
   out_5206672849366731593[24] = 0;
   out_5206672849366731593[25] = 0;
   out_5206672849366731593[26] = 0;
   out_5206672849366731593[27] = 0;
   out_5206672849366731593[28] = 0;
   out_5206672849366731593[29] = 0;
   out_5206672849366731593[30] = 0;
   out_5206672849366731593[31] = 0;
   out_5206672849366731593[32] = 0;
   out_5206672849366731593[33] = 0;
   out_5206672849366731593[34] = 1;
   out_5206672849366731593[35] = 0;
   out_5206672849366731593[36] = 0;
   out_5206672849366731593[37] = 1;
   out_5206672849366731593[38] = 0;
   out_5206672849366731593[39] = 0;
   out_5206672849366731593[40] = 0;
   out_5206672849366731593[41] = 0;
   out_5206672849366731593[42] = 0;
   out_5206672849366731593[43] = 0;
   out_5206672849366731593[44] = 0;
   out_5206672849366731593[45] = 0;
   out_5206672849366731593[46] = 0;
   out_5206672849366731593[47] = 0;
   out_5206672849366731593[48] = 0;
   out_5206672849366731593[49] = 0;
   out_5206672849366731593[50] = 0;
   out_5206672849366731593[51] = 0;
   out_5206672849366731593[52] = 0;
   out_5206672849366731593[53] = 0;
   out_5206672849366731593[54] = 0;
   out_5206672849366731593[55] = 0;
   out_5206672849366731593[56] = 0;
   out_5206672849366731593[57] = 0;
   out_5206672849366731593[58] = 1;
   out_5206672849366731593[59] = 0;
   out_5206672849366731593[60] = 0;
   out_5206672849366731593[61] = 1;
   out_5206672849366731593[62] = 0;
   out_5206672849366731593[63] = 0;
   out_5206672849366731593[64] = 0;
   out_5206672849366731593[65] = 0;
   out_5206672849366731593[66] = 0;
   out_5206672849366731593[67] = 0;
   out_5206672849366731593[68] = 0;
}
void h_9(double *state, double *unused, double *out_2279431599228473214) {
   out_2279431599228473214[0] = state[10];
   out_2279431599228473214[1] = state[11];
   out_2279431599228473214[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3871536391837107228) {
   out_3871536391837107228[0] = 0;
   out_3871536391837107228[1] = 0;
   out_3871536391837107228[2] = 0;
   out_3871536391837107228[3] = 0;
   out_3871536391837107228[4] = 0;
   out_3871536391837107228[5] = 0;
   out_3871536391837107228[6] = 0;
   out_3871536391837107228[7] = 0;
   out_3871536391837107228[8] = 0;
   out_3871536391837107228[9] = 0;
   out_3871536391837107228[10] = 1;
   out_3871536391837107228[11] = 0;
   out_3871536391837107228[12] = 0;
   out_3871536391837107228[13] = 0;
   out_3871536391837107228[14] = 0;
   out_3871536391837107228[15] = 0;
   out_3871536391837107228[16] = 0;
   out_3871536391837107228[17] = 0;
   out_3871536391837107228[18] = 0;
   out_3871536391837107228[19] = 0;
   out_3871536391837107228[20] = 0;
   out_3871536391837107228[21] = 0;
   out_3871536391837107228[22] = 0;
   out_3871536391837107228[23] = 0;
   out_3871536391837107228[24] = 0;
   out_3871536391837107228[25] = 0;
   out_3871536391837107228[26] = 0;
   out_3871536391837107228[27] = 0;
   out_3871536391837107228[28] = 0;
   out_3871536391837107228[29] = 0;
   out_3871536391837107228[30] = 0;
   out_3871536391837107228[31] = 0;
   out_3871536391837107228[32] = 0;
   out_3871536391837107228[33] = 0;
   out_3871536391837107228[34] = 1;
   out_3871536391837107228[35] = 0;
   out_3871536391837107228[36] = 0;
   out_3871536391837107228[37] = 0;
   out_3871536391837107228[38] = 0;
   out_3871536391837107228[39] = 0;
   out_3871536391837107228[40] = 0;
   out_3871536391837107228[41] = 0;
   out_3871536391837107228[42] = 0;
   out_3871536391837107228[43] = 0;
   out_3871536391837107228[44] = 0;
   out_3871536391837107228[45] = 0;
   out_3871536391837107228[46] = 0;
   out_3871536391837107228[47] = 0;
   out_3871536391837107228[48] = 0;
   out_3871536391837107228[49] = 0;
   out_3871536391837107228[50] = 0;
   out_3871536391837107228[51] = 0;
   out_3871536391837107228[52] = 0;
   out_3871536391837107228[53] = 0;
   out_3871536391837107228[54] = 0;
   out_3871536391837107228[55] = 0;
   out_3871536391837107228[56] = 0;
   out_3871536391837107228[57] = 0;
   out_3871536391837107228[58] = 1;
   out_3871536391837107228[59] = 0;
   out_3871536391837107228[60] = 0;
   out_3871536391837107228[61] = 0;
   out_3871536391837107228[62] = 0;
   out_3871536391837107228[63] = 0;
   out_3871536391837107228[64] = 0;
   out_3871536391837107228[65] = 0;
   out_3871536391837107228[66] = 0;
   out_3871536391837107228[67] = 0;
   out_3871536391837107228[68] = 0;
}
void h_10(double *state, double *unused, double *out_9059368528696520403) {
   out_9059368528696520403[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_9059368528696520403[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_9059368528696520403[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_4517710279208805907) {
   out_4517710279208805907[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4517710279208805907[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4517710279208805907[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4517710279208805907[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4517710279208805907[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4517710279208805907[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4517710279208805907[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4517710279208805907[7] = 0;
   out_4517710279208805907[8] = 0;
   out_4517710279208805907[9] = 0;
   out_4517710279208805907[10] = 0;
   out_4517710279208805907[11] = 0;
   out_4517710279208805907[12] = 0;
   out_4517710279208805907[13] = 0;
   out_4517710279208805907[14] = 0;
   out_4517710279208805907[15] = 0;
   out_4517710279208805907[16] = 0;
   out_4517710279208805907[17] = 1;
   out_4517710279208805907[18] = 0;
   out_4517710279208805907[19] = 0;
   out_4517710279208805907[20] = 0;
   out_4517710279208805907[21] = 0;
   out_4517710279208805907[22] = 0;
   out_4517710279208805907[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4517710279208805907[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4517710279208805907[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4517710279208805907[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4517710279208805907[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4517710279208805907[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4517710279208805907[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4517710279208805907[30] = 0;
   out_4517710279208805907[31] = 0;
   out_4517710279208805907[32] = 0;
   out_4517710279208805907[33] = 0;
   out_4517710279208805907[34] = 0;
   out_4517710279208805907[35] = 0;
   out_4517710279208805907[36] = 0;
   out_4517710279208805907[37] = 0;
   out_4517710279208805907[38] = 0;
   out_4517710279208805907[39] = 0;
   out_4517710279208805907[40] = 0;
   out_4517710279208805907[41] = 1;
   out_4517710279208805907[42] = 0;
   out_4517710279208805907[43] = 0;
   out_4517710279208805907[44] = 0;
   out_4517710279208805907[45] = 0;
   out_4517710279208805907[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4517710279208805907[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4517710279208805907[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4517710279208805907[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4517710279208805907[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4517710279208805907[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4517710279208805907[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4517710279208805907[53] = 0;
   out_4517710279208805907[54] = 0;
   out_4517710279208805907[55] = 0;
   out_4517710279208805907[56] = 0;
   out_4517710279208805907[57] = 0;
   out_4517710279208805907[58] = 0;
   out_4517710279208805907[59] = 0;
   out_4517710279208805907[60] = 0;
   out_4517710279208805907[61] = 0;
   out_4517710279208805907[62] = 0;
   out_4517710279208805907[63] = 0;
   out_4517710279208805907[64] = 0;
   out_4517710279208805907[65] = 1;
   out_4517710279208805907[66] = 0;
   out_4517710279208805907[67] = 0;
   out_4517710279208805907[68] = 0;
}
void h_12(double *state, double *unused, double *out_2176278969607455995) {
   out_2176278969607455995[0] = state[0];
   out_2176278969607455995[1] = state[1];
   out_2176278969607455995[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7313228361105941162) {
   out_7313228361105941162[0] = 1;
   out_7313228361105941162[1] = 0;
   out_7313228361105941162[2] = 0;
   out_7313228361105941162[3] = 0;
   out_7313228361105941162[4] = 0;
   out_7313228361105941162[5] = 0;
   out_7313228361105941162[6] = 0;
   out_7313228361105941162[7] = 0;
   out_7313228361105941162[8] = 0;
   out_7313228361105941162[9] = 0;
   out_7313228361105941162[10] = 0;
   out_7313228361105941162[11] = 0;
   out_7313228361105941162[12] = 0;
   out_7313228361105941162[13] = 0;
   out_7313228361105941162[14] = 0;
   out_7313228361105941162[15] = 0;
   out_7313228361105941162[16] = 0;
   out_7313228361105941162[17] = 0;
   out_7313228361105941162[18] = 0;
   out_7313228361105941162[19] = 0;
   out_7313228361105941162[20] = 0;
   out_7313228361105941162[21] = 0;
   out_7313228361105941162[22] = 0;
   out_7313228361105941162[23] = 0;
   out_7313228361105941162[24] = 1;
   out_7313228361105941162[25] = 0;
   out_7313228361105941162[26] = 0;
   out_7313228361105941162[27] = 0;
   out_7313228361105941162[28] = 0;
   out_7313228361105941162[29] = 0;
   out_7313228361105941162[30] = 0;
   out_7313228361105941162[31] = 0;
   out_7313228361105941162[32] = 0;
   out_7313228361105941162[33] = 0;
   out_7313228361105941162[34] = 0;
   out_7313228361105941162[35] = 0;
   out_7313228361105941162[36] = 0;
   out_7313228361105941162[37] = 0;
   out_7313228361105941162[38] = 0;
   out_7313228361105941162[39] = 0;
   out_7313228361105941162[40] = 0;
   out_7313228361105941162[41] = 0;
   out_7313228361105941162[42] = 0;
   out_7313228361105941162[43] = 0;
   out_7313228361105941162[44] = 0;
   out_7313228361105941162[45] = 0;
   out_7313228361105941162[46] = 0;
   out_7313228361105941162[47] = 0;
   out_7313228361105941162[48] = 1;
   out_7313228361105941162[49] = 0;
   out_7313228361105941162[50] = 0;
   out_7313228361105941162[51] = 0;
   out_7313228361105941162[52] = 0;
   out_7313228361105941162[53] = 0;
   out_7313228361105941162[54] = 0;
   out_7313228361105941162[55] = 0;
   out_7313228361105941162[56] = 0;
   out_7313228361105941162[57] = 0;
   out_7313228361105941162[58] = 0;
   out_7313228361105941162[59] = 0;
   out_7313228361105941162[60] = 0;
   out_7313228361105941162[61] = 0;
   out_7313228361105941162[62] = 0;
   out_7313228361105941162[63] = 0;
   out_7313228361105941162[64] = 0;
   out_7313228361105941162[65] = 0;
   out_7313228361105941162[66] = 0;
   out_7313228361105941162[67] = 0;
   out_7313228361105941162[68] = 0;
}
void h_31(double *state, double *unused, double *out_7103464003689301593) {
   out_7103464003689301593[0] = state[7];
   out_7103464003689301593[1] = state[8];
   out_7103464003689301593[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4638138585962521341) {
   out_4638138585962521341[0] = 0;
   out_4638138585962521341[1] = 0;
   out_4638138585962521341[2] = 0;
   out_4638138585962521341[3] = 0;
   out_4638138585962521341[4] = 0;
   out_4638138585962521341[5] = 0;
   out_4638138585962521341[6] = 0;
   out_4638138585962521341[7] = 1;
   out_4638138585962521341[8] = 0;
   out_4638138585962521341[9] = 0;
   out_4638138585962521341[10] = 0;
   out_4638138585962521341[11] = 0;
   out_4638138585962521341[12] = 0;
   out_4638138585962521341[13] = 0;
   out_4638138585962521341[14] = 0;
   out_4638138585962521341[15] = 0;
   out_4638138585962521341[16] = 0;
   out_4638138585962521341[17] = 0;
   out_4638138585962521341[18] = 0;
   out_4638138585962521341[19] = 0;
   out_4638138585962521341[20] = 0;
   out_4638138585962521341[21] = 0;
   out_4638138585962521341[22] = 0;
   out_4638138585962521341[23] = 0;
   out_4638138585962521341[24] = 0;
   out_4638138585962521341[25] = 0;
   out_4638138585962521341[26] = 0;
   out_4638138585962521341[27] = 0;
   out_4638138585962521341[28] = 0;
   out_4638138585962521341[29] = 0;
   out_4638138585962521341[30] = 0;
   out_4638138585962521341[31] = 1;
   out_4638138585962521341[32] = 0;
   out_4638138585962521341[33] = 0;
   out_4638138585962521341[34] = 0;
   out_4638138585962521341[35] = 0;
   out_4638138585962521341[36] = 0;
   out_4638138585962521341[37] = 0;
   out_4638138585962521341[38] = 0;
   out_4638138585962521341[39] = 0;
   out_4638138585962521341[40] = 0;
   out_4638138585962521341[41] = 0;
   out_4638138585962521341[42] = 0;
   out_4638138585962521341[43] = 0;
   out_4638138585962521341[44] = 0;
   out_4638138585962521341[45] = 0;
   out_4638138585962521341[46] = 0;
   out_4638138585962521341[47] = 0;
   out_4638138585962521341[48] = 0;
   out_4638138585962521341[49] = 0;
   out_4638138585962521341[50] = 0;
   out_4638138585962521341[51] = 0;
   out_4638138585962521341[52] = 0;
   out_4638138585962521341[53] = 0;
   out_4638138585962521341[54] = 0;
   out_4638138585962521341[55] = 1;
   out_4638138585962521341[56] = 0;
   out_4638138585962521341[57] = 0;
   out_4638138585962521341[58] = 0;
   out_4638138585962521341[59] = 0;
   out_4638138585962521341[60] = 0;
   out_4638138585962521341[61] = 0;
   out_4638138585962521341[62] = 0;
   out_4638138585962521341[63] = 0;
   out_4638138585962521341[64] = 0;
   out_4638138585962521341[65] = 0;
   out_4638138585962521341[66] = 0;
   out_4638138585962521341[67] = 0;
   out_4638138585962521341[68] = 0;
}
void h_32(double *state, double *unused, double *out_9018968435170132551) {
   out_9018968435170132551[0] = state[3];
   out_9018968435170132551[1] = state[4];
   out_9018968435170132551[2] = state[5];
   out_9018968435170132551[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2198238876576723912) {
   out_2198238876576723912[0] = 0;
   out_2198238876576723912[1] = 0;
   out_2198238876576723912[2] = 0;
   out_2198238876576723912[3] = 1;
   out_2198238876576723912[4] = 0;
   out_2198238876576723912[5] = 0;
   out_2198238876576723912[6] = 0;
   out_2198238876576723912[7] = 0;
   out_2198238876576723912[8] = 0;
   out_2198238876576723912[9] = 0;
   out_2198238876576723912[10] = 0;
   out_2198238876576723912[11] = 0;
   out_2198238876576723912[12] = 0;
   out_2198238876576723912[13] = 0;
   out_2198238876576723912[14] = 0;
   out_2198238876576723912[15] = 0;
   out_2198238876576723912[16] = 0;
   out_2198238876576723912[17] = 0;
   out_2198238876576723912[18] = 0;
   out_2198238876576723912[19] = 0;
   out_2198238876576723912[20] = 0;
   out_2198238876576723912[21] = 0;
   out_2198238876576723912[22] = 0;
   out_2198238876576723912[23] = 0;
   out_2198238876576723912[24] = 0;
   out_2198238876576723912[25] = 0;
   out_2198238876576723912[26] = 0;
   out_2198238876576723912[27] = 1;
   out_2198238876576723912[28] = 0;
   out_2198238876576723912[29] = 0;
   out_2198238876576723912[30] = 0;
   out_2198238876576723912[31] = 0;
   out_2198238876576723912[32] = 0;
   out_2198238876576723912[33] = 0;
   out_2198238876576723912[34] = 0;
   out_2198238876576723912[35] = 0;
   out_2198238876576723912[36] = 0;
   out_2198238876576723912[37] = 0;
   out_2198238876576723912[38] = 0;
   out_2198238876576723912[39] = 0;
   out_2198238876576723912[40] = 0;
   out_2198238876576723912[41] = 0;
   out_2198238876576723912[42] = 0;
   out_2198238876576723912[43] = 0;
   out_2198238876576723912[44] = 0;
   out_2198238876576723912[45] = 0;
   out_2198238876576723912[46] = 0;
   out_2198238876576723912[47] = 0;
   out_2198238876576723912[48] = 0;
   out_2198238876576723912[49] = 0;
   out_2198238876576723912[50] = 0;
   out_2198238876576723912[51] = 1;
   out_2198238876576723912[52] = 0;
   out_2198238876576723912[53] = 0;
   out_2198238876576723912[54] = 0;
   out_2198238876576723912[55] = 0;
   out_2198238876576723912[56] = 0;
   out_2198238876576723912[57] = 0;
   out_2198238876576723912[58] = 0;
   out_2198238876576723912[59] = 0;
   out_2198238876576723912[60] = 0;
   out_2198238876576723912[61] = 0;
   out_2198238876576723912[62] = 0;
   out_2198238876576723912[63] = 0;
   out_2198238876576723912[64] = 0;
   out_2198238876576723912[65] = 0;
   out_2198238876576723912[66] = 0;
   out_2198238876576723912[67] = 0;
   out_2198238876576723912[68] = 0;
   out_2198238876576723912[69] = 0;
   out_2198238876576723912[70] = 0;
   out_2198238876576723912[71] = 0;
   out_2198238876576723912[72] = 0;
   out_2198238876576723912[73] = 0;
   out_2198238876576723912[74] = 0;
   out_2198238876576723912[75] = 1;
   out_2198238876576723912[76] = 0;
   out_2198238876576723912[77] = 0;
   out_2198238876576723912[78] = 0;
   out_2198238876576723912[79] = 0;
   out_2198238876576723912[80] = 0;
   out_2198238876576723912[81] = 0;
   out_2198238876576723912[82] = 0;
   out_2198238876576723912[83] = 0;
   out_2198238876576723912[84] = 0;
   out_2198238876576723912[85] = 0;
   out_2198238876576723912[86] = 0;
   out_2198238876576723912[87] = 0;
   out_2198238876576723912[88] = 0;
   out_2198238876576723912[89] = 0;
   out_2198238876576723912[90] = 0;
   out_2198238876576723912[91] = 0;
}
void h_13(double *state, double *unused, double *out_4039719206652827388) {
   out_4039719206652827388[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4039719206652827388[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4039719206652827388[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1517038414910104207) {
   out_1517038414910104207[0] = 0;
   out_1517038414910104207[1] = 0;
   out_1517038414910104207[2] = 0;
   out_1517038414910104207[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1517038414910104207[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1517038414910104207[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1517038414910104207[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1517038414910104207[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1517038414910104207[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1517038414910104207[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1517038414910104207[10] = 0;
   out_1517038414910104207[11] = 0;
   out_1517038414910104207[12] = 0;
   out_1517038414910104207[13] = 0;
   out_1517038414910104207[14] = 0;
   out_1517038414910104207[15] = 0;
   out_1517038414910104207[16] = 0;
   out_1517038414910104207[17] = 0;
   out_1517038414910104207[18] = 0;
   out_1517038414910104207[19] = 0;
   out_1517038414910104207[20] = 0;
   out_1517038414910104207[21] = 0;
   out_1517038414910104207[22] = 0;
   out_1517038414910104207[23] = 0;
   out_1517038414910104207[24] = 0;
   out_1517038414910104207[25] = 0;
   out_1517038414910104207[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1517038414910104207[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1517038414910104207[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1517038414910104207[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1517038414910104207[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1517038414910104207[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1517038414910104207[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1517038414910104207[33] = 0;
   out_1517038414910104207[34] = 0;
   out_1517038414910104207[35] = 0;
   out_1517038414910104207[36] = 0;
   out_1517038414910104207[37] = 0;
   out_1517038414910104207[38] = 0;
   out_1517038414910104207[39] = 0;
   out_1517038414910104207[40] = 0;
   out_1517038414910104207[41] = 0;
   out_1517038414910104207[42] = 0;
   out_1517038414910104207[43] = 0;
   out_1517038414910104207[44] = 0;
   out_1517038414910104207[45] = 0;
   out_1517038414910104207[46] = 0;
   out_1517038414910104207[47] = 0;
   out_1517038414910104207[48] = 0;
   out_1517038414910104207[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1517038414910104207[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1517038414910104207[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1517038414910104207[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1517038414910104207[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1517038414910104207[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1517038414910104207[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1517038414910104207[56] = 0;
   out_1517038414910104207[57] = 0;
   out_1517038414910104207[58] = 0;
   out_1517038414910104207[59] = 0;
   out_1517038414910104207[60] = 0;
   out_1517038414910104207[61] = 0;
   out_1517038414910104207[62] = 0;
   out_1517038414910104207[63] = 0;
   out_1517038414910104207[64] = 0;
   out_1517038414910104207[65] = 0;
   out_1517038414910104207[66] = 0;
   out_1517038414910104207[67] = 0;
   out_1517038414910104207[68] = 0;
}
void h_14(double *state, double *unused, double *out_2279431599228473214) {
   out_2279431599228473214[0] = state[10];
   out_2279431599228473214[1] = state[11];
   out_2279431599228473214[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3871536391837107228) {
   out_3871536391837107228[0] = 0;
   out_3871536391837107228[1] = 0;
   out_3871536391837107228[2] = 0;
   out_3871536391837107228[3] = 0;
   out_3871536391837107228[4] = 0;
   out_3871536391837107228[5] = 0;
   out_3871536391837107228[6] = 0;
   out_3871536391837107228[7] = 0;
   out_3871536391837107228[8] = 0;
   out_3871536391837107228[9] = 0;
   out_3871536391837107228[10] = 1;
   out_3871536391837107228[11] = 0;
   out_3871536391837107228[12] = 0;
   out_3871536391837107228[13] = 0;
   out_3871536391837107228[14] = 0;
   out_3871536391837107228[15] = 0;
   out_3871536391837107228[16] = 0;
   out_3871536391837107228[17] = 0;
   out_3871536391837107228[18] = 0;
   out_3871536391837107228[19] = 0;
   out_3871536391837107228[20] = 0;
   out_3871536391837107228[21] = 0;
   out_3871536391837107228[22] = 0;
   out_3871536391837107228[23] = 0;
   out_3871536391837107228[24] = 0;
   out_3871536391837107228[25] = 0;
   out_3871536391837107228[26] = 0;
   out_3871536391837107228[27] = 0;
   out_3871536391837107228[28] = 0;
   out_3871536391837107228[29] = 0;
   out_3871536391837107228[30] = 0;
   out_3871536391837107228[31] = 0;
   out_3871536391837107228[32] = 0;
   out_3871536391837107228[33] = 0;
   out_3871536391837107228[34] = 1;
   out_3871536391837107228[35] = 0;
   out_3871536391837107228[36] = 0;
   out_3871536391837107228[37] = 0;
   out_3871536391837107228[38] = 0;
   out_3871536391837107228[39] = 0;
   out_3871536391837107228[40] = 0;
   out_3871536391837107228[41] = 0;
   out_3871536391837107228[42] = 0;
   out_3871536391837107228[43] = 0;
   out_3871536391837107228[44] = 0;
   out_3871536391837107228[45] = 0;
   out_3871536391837107228[46] = 0;
   out_3871536391837107228[47] = 0;
   out_3871536391837107228[48] = 0;
   out_3871536391837107228[49] = 0;
   out_3871536391837107228[50] = 0;
   out_3871536391837107228[51] = 0;
   out_3871536391837107228[52] = 0;
   out_3871536391837107228[53] = 0;
   out_3871536391837107228[54] = 0;
   out_3871536391837107228[55] = 0;
   out_3871536391837107228[56] = 0;
   out_3871536391837107228[57] = 0;
   out_3871536391837107228[58] = 1;
   out_3871536391837107228[59] = 0;
   out_3871536391837107228[60] = 0;
   out_3871536391837107228[61] = 0;
   out_3871536391837107228[62] = 0;
   out_3871536391837107228[63] = 0;
   out_3871536391837107228[64] = 0;
   out_3871536391837107228[65] = 0;
   out_3871536391837107228[66] = 0;
   out_3871536391837107228[67] = 0;
   out_3871536391837107228[68] = 0;
}
void h_19(double *state, double *unused, double *out_8916903900802026639) {
   out_8916903900802026639[0] = state[20];
   out_8916903900802026639[1] = state[21];
   out_8916903900802026639[2] = state[22];
}
void H_19(double *state, double *unused, double *out_561143459265323953) {
   out_561143459265323953[0] = 0;
   out_561143459265323953[1] = 0;
   out_561143459265323953[2] = 0;
   out_561143459265323953[3] = 0;
   out_561143459265323953[4] = 0;
   out_561143459265323953[5] = 0;
   out_561143459265323953[6] = 0;
   out_561143459265323953[7] = 0;
   out_561143459265323953[8] = 0;
   out_561143459265323953[9] = 0;
   out_561143459265323953[10] = 0;
   out_561143459265323953[11] = 0;
   out_561143459265323953[12] = 0;
   out_561143459265323953[13] = 0;
   out_561143459265323953[14] = 0;
   out_561143459265323953[15] = 0;
   out_561143459265323953[16] = 0;
   out_561143459265323953[17] = 0;
   out_561143459265323953[18] = 0;
   out_561143459265323953[19] = 0;
   out_561143459265323953[20] = 1;
   out_561143459265323953[21] = 0;
   out_561143459265323953[22] = 0;
   out_561143459265323953[23] = 0;
   out_561143459265323953[24] = 0;
   out_561143459265323953[25] = 0;
   out_561143459265323953[26] = 0;
   out_561143459265323953[27] = 0;
   out_561143459265323953[28] = 0;
   out_561143459265323953[29] = 0;
   out_561143459265323953[30] = 0;
   out_561143459265323953[31] = 0;
   out_561143459265323953[32] = 0;
   out_561143459265323953[33] = 0;
   out_561143459265323953[34] = 0;
   out_561143459265323953[35] = 0;
   out_561143459265323953[36] = 0;
   out_561143459265323953[37] = 0;
   out_561143459265323953[38] = 0;
   out_561143459265323953[39] = 0;
   out_561143459265323953[40] = 0;
   out_561143459265323953[41] = 0;
   out_561143459265323953[42] = 0;
   out_561143459265323953[43] = 0;
   out_561143459265323953[44] = 1;
   out_561143459265323953[45] = 0;
   out_561143459265323953[46] = 0;
   out_561143459265323953[47] = 0;
   out_561143459265323953[48] = 0;
   out_561143459265323953[49] = 0;
   out_561143459265323953[50] = 0;
   out_561143459265323953[51] = 0;
   out_561143459265323953[52] = 0;
   out_561143459265323953[53] = 0;
   out_561143459265323953[54] = 0;
   out_561143459265323953[55] = 0;
   out_561143459265323953[56] = 0;
   out_561143459265323953[57] = 0;
   out_561143459265323953[58] = 0;
   out_561143459265323953[59] = 0;
   out_561143459265323953[60] = 0;
   out_561143459265323953[61] = 0;
   out_561143459265323953[62] = 0;
   out_561143459265323953[63] = 0;
   out_561143459265323953[64] = 0;
   out_561143459265323953[65] = 0;
   out_561143459265323953[66] = 0;
   out_561143459265323953[67] = 0;
   out_561143459265323953[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_6898201814641298663) {
  H(in_vec, out_6898201814641298663);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2731531531239177106) {
  err_fun(nom_x, delta_x, out_2731531531239177106);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_258697847652257420) {
  inv_err_fun(nom_x, true_x, out_258697847652257420);
}
void live_H_mod_fun(double *state, double *out_9090898548951532695) {
  H_mod_fun(state, out_9090898548951532695);
}
void live_f_fun(double *state, double dt, double *out_9171496604355134652) {
  f_fun(state,  dt, out_9171496604355134652);
}
void live_F_fun(double *state, double dt, double *out_4618057697060829338) {
  F_fun(state,  dt, out_4618057697060829338);
}
void live_h_3(double *state, double *unused, double *out_4538801653319691933) {
  h_3(state, unused, out_4538801653319691933);
}
void live_H_3(double *state, double *unused, double *out_575863248760330452) {
  H_3(state, unused, out_575863248760330452);
}
void live_h_4(double *state, double *unused, double *out_245390277277672403) {
  h_4(state, unused, out_245390277277672403);
}
void live_H_4(double *state, double *unused, double *out_5206672849366731593) {
  H_4(state, unused, out_5206672849366731593);
}
void live_h_9(double *state, double *unused, double *out_2279431599228473214) {
  h_9(state, unused, out_2279431599228473214);
}
void live_H_9(double *state, double *unused, double *out_3871536391837107228) {
  H_9(state, unused, out_3871536391837107228);
}
void live_h_10(double *state, double *unused, double *out_9059368528696520403) {
  h_10(state, unused, out_9059368528696520403);
}
void live_H_10(double *state, double *unused, double *out_4517710279208805907) {
  H_10(state, unused, out_4517710279208805907);
}
void live_h_12(double *state, double *unused, double *out_2176278969607455995) {
  h_12(state, unused, out_2176278969607455995);
}
void live_H_12(double *state, double *unused, double *out_7313228361105941162) {
  H_12(state, unused, out_7313228361105941162);
}
void live_h_31(double *state, double *unused, double *out_7103464003689301593) {
  h_31(state, unused, out_7103464003689301593);
}
void live_H_31(double *state, double *unused, double *out_4638138585962521341) {
  H_31(state, unused, out_4638138585962521341);
}
void live_h_32(double *state, double *unused, double *out_9018968435170132551) {
  h_32(state, unused, out_9018968435170132551);
}
void live_H_32(double *state, double *unused, double *out_2198238876576723912) {
  H_32(state, unused, out_2198238876576723912);
}
void live_h_13(double *state, double *unused, double *out_4039719206652827388) {
  h_13(state, unused, out_4039719206652827388);
}
void live_H_13(double *state, double *unused, double *out_1517038414910104207) {
  H_13(state, unused, out_1517038414910104207);
}
void live_h_14(double *state, double *unused, double *out_2279431599228473214) {
  h_14(state, unused, out_2279431599228473214);
}
void live_H_14(double *state, double *unused, double *out_3871536391837107228) {
  H_14(state, unused, out_3871536391837107228);
}
void live_h_19(double *state, double *unused, double *out_8916903900802026639) {
  h_19(state, unused, out_8916903900802026639);
}
void live_H_19(double *state, double *unused, double *out_561143459265323953) {
  H_19(state, unused, out_561143459265323953);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
